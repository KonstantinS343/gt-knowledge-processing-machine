scp_program -> proc_use_solver_element
(*
	-> rrel_params: ...
	(*
		-> rrel_1: rrel_in: _solver_object;;
		-> rrel_2: rrel_in: _key_element;;
		-> rrel_3: rrel_in: _solver_element;;
		-> rrel_4: rrel_out: _solution_node;;
		-> rrel_5: rrel_in: _init_struct;;
		-> rrel_6: rrel_in: _result_struct;;
	*);;

	-> rrel_operators: ... 
	(*

		-> rrel_init: .proc_use_solver_element_operator0
		(*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_const: scp_program;;
            -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
            -> rrel_3: rrel_fixed: rrel_scp_var: _solver_element;;
			
			=> nrel_then: .proc_use_solver_element_operator1;;
			=> nrel_else: .proc_use_solver_element_operator3;;
		*);;

		-> .proc_use_solver_element_operator1
		(*
			<- call;;
		    -> rrel_1: rrel_fixed: rrel_scp_var: _solver_element;;
		    -> rrel_2: rrel_fixed: rrel_scp_const: ... 
				(*
					-> rrel_1: rrel_fixed: rrel_scp_var: _solver_object;;
				*);;
		    -> rrel_3: rrel_assign: rrel_scp_var: _descr;;

			=> nrel_goto: .proc_use_solver_element_operator2;;
		*);;

		-> .proc_use_solver_element_operator2
		(*
			<- waitReturn;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _descr;;
			
			=> nrel_goto: .proc_use_solver_element_operator6;;
		*);;

		-> .proc_use_solver_element_operator3
		(*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_const: sc_statement;;
            -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
            -> rrel_3: rrel_fixed: rrel_scp_var: _solver_element;;
			
			=> nrel_then: .proc_use_solver_element_operator4;;
			=> nrel_else: .proc_use_solver_element_operator_return;;//&&
		*);;

		-> .proc_use_solver_element_operator4
		(*
			<- call;;
		    -> rrel_1: rrel_fixed: rrel_scp_const: proc_use_sc_statement;;
		    -> rrel_2: rrel_fixed: rrel_scp_const: ... 
				(*
					-> rrel_1: rrel_fixed: rrel_scp_var: _solver_element;;
					-> rrel_2: rrel_fixed: rrel_scp_var: _solver_object;;
					-> rrel_3: rrel_fixed: rrel_scp_var: _init_struct;;
					-> rrel_4: rrel_fixed: rrel_scp_var: _result_struct;;
				*);;
		    -> rrel_3: rrel_assign: rrel_scp_var: _descr;;

			=> nrel_goto: .proc_use_solver_element_operator5;;
		*);;

		-> .proc_use_solver_element_operator5
		(*
			<- waitReturn;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _descr;;
			
			=> nrel_goto: .proc_use_solver_element_operator6;;
		*);;

		-> .proc_use_solver_element_operator6
		(*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_const: solution_tree_node_used;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_const: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _solution_node;;

			=> nrel_goto: .proc_use_solver_element_operator7;;
		*);;

		-> .proc_use_solver_element_operator7
		(*
			<- call;;
		    -> rrel_1: rrel_fixed: rrel_scp_const: proc_nodes_is_connected;;
		    -> rrel_2: rrel_fixed: rrel_scp_const: ... 
				(*
					-> rrel_1: rrel_fixed: rrel_scp_var: _solver_object;;
					-> rrel_2: rrel_fixed: rrel_scp_var: _key_element;;
					-> rrel_3: rrel_assign: rrel_scp_var: _nodes_relation;;
				*);;
		    -> rrel_3: rrel_assign: rrel_scp_var: _descr1;;

			=> nrel_goto: .proc_use_solver_element_operator8;;
		*);;

		-> .proc_use_solver_element_operator8
		(*
			<- waitReturn;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _descr1;;

			=> nrel_goto: .proc_use_solver_element_operator9;;
		*);;

		-> .proc_use_solver_element_operator9
		(*
			<- ifVarAssign;;
		  	-> rrel_1: rrel_scp_var: _nodes_relation;;

			=> nrel_then: .proc_use_solver_element_operator10;;
			=> nrel_else: .proc_use_solver_element_operator_return;;
		*);;

		-> .proc_use_solver_element_operator10
		(*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_const: solution_tree_node;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _ara;;
			-> rrel_3: rrel_assign: rrel_scp_var: rrel_node: rrel_const: _solution_node;;

			=> nrel_goto: .proc_use_solver_element_operator11;;
		*);;

		-> .proc_use_solver_element_operator11
		(*
			<- genElStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _solution_node;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_common: rrel_const: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _key_element;;
			-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_solution_action_goal;;

			=> nrel_goto: .proc_use_solver_element_operator12;;
		*);;

		-> .proc_use_solver_element_operator12
		(*
			<- genElStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _solution_node;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_common: rrel_const: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _solver_object;;
			-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_solution_argument_1;;

			=> nrel_goto: .proc_use_solver_element_operator13;;
		*);;

		-> .proc_use_solver_element_operator13
		(*
			<- genElStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _solution_node;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_const: rrel_common: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _nodes_relation;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc1;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_action_result;; 

			=> nrel_goto: .proc_use_solver_element_operator14;;
		*);;

		-> .proc_use_solver_element_operator14
		(*
			<- genElStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _solution_node;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_const: rrel_common: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _solver_element;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc1;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_solution_action;; 

			=> nrel_goto: .proc_use_solver_element_operator_return;;
		*);;

		-> .proc_use_solver_element_operator_return(*<-return;;*);;
	*);;
*);;

