scp_program -> proc_init_question_event
(*
	-> rrel_params: ...
	(*
		-> rrel_1: rrel_in: _question_name;;
		-> rrel_2: rrel_in: _question_params;;
		-> rrel_3: rrel_out: _agent_answer;;
	*);;

	-> rrel_operators: ... 
	(*
		-> rrel_init: .proc_init_question_event_operator0
		(*
			<- genEl;;
			-> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _quest;;

			=> nrel_goto: .proc_init_question_event_operator1;;
		*);;

		-> .proc_init_question_event_operator1
		(*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _question_params;;

			=> nrel_goto: .proc_init_question_event_operator2;;
		*);;

		-> .proc_init_question_event_operator2
		(*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _question_name;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _quest;;

			=> nrel_goto: .proc_init_question_event_operator3;;
		*);;

		-> .proc_init_question_event_operator3
		(*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_const: question_initiated;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc_init;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _quest;;

			=> nrel_goto: .proc_init_question_event_operator4;;
		*);;
		
		-> .proc_init_question_event_operator4
		(*                                       
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_const: question_finished;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc_result;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _quest;;

			=> nrel_then: .proc_init_question_event_operator8;;
			=> nrel_else: .proc_init_question_event_operator5;;
		*);;

		-> .proc_init_question_event_operator5
		(*                                       
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_const: question_finished_successfully;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc_result;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _quest;;

			=> nrel_then: .proc_init_question_event_operator7;;
			=> nrel_else: .proc_init_question_event_operator6;;
		*);;

		-> .proc_init_question_event_operator6
		(*
			<- sys_wait;;
			-> rrel_1: rrel_fixed: rrel_scp_const: sc_event_remove_input_arc;;
			-> rrel_2: rrel_fixed: rrel_scp_var: _quest;;

			=> nrel_goto: .proc_init_question_event_operator_debug;;
		*);;

		-> .proc_init_question_event_operator_debug
		(*
			<- printNl;;
			-> rrel_1: rrel_fixed: rrel_scp_const: [sc_event_add_input_arc was occured];;

			=> nrel_goto: .proc_init_question_event_operator4;;
		*);;

		-> .proc_init_question_event_operator7
		(*
			<- searchElStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
			-> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _agent_answer;;
			-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_answer;;

			=>nrel_goto: .proc_init_question_event_operator8;;
		*);; 

		-> .proc_init_question_event_operator8
		(*
			<- eraseEl;;
			-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc_init;;

			=> nrel_goto: .proc_init_question_event_operator9;;
		*);;

		-> .proc_init_question_event_operator9
		(*
			<- eraseEl;;
			-> rrel_1: rrel_fixed: rrel_erase: rrel_scp_var: _arc_result;;

			=> nrel_goto: .proc_init_question_event_operator_return;;
		*);;

		-> .proc_init_question_event_operator_return(*<-return;;*);;
	*);;
*);;

