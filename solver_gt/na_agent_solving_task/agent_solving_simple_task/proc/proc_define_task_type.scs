scp_program -> proc_define_task_type
(*
	-> rrel_params: ...
	(*
		-> rrel_1: rrel_in: _params;;
		-> rrel_2: rrel_out: _question_name;;
	*);;

	-> rrel_operators: ... 
	(*
		-> rrel_init: .proc_define_task_type_operator0
		(*
			<- searchElStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _params;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
			-> rrel_3: rrel_assign: rrel_scp_var: _param1;;
			-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: rrel_1;;

			=> nrel_then: .proc_define_task_type_operator1;;
			=> nrel_else: .proc_define_task_type_operator_return;;
		*);;

		-> .proc_define_task_type_operator1
		(*
			<- searchElStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _params;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
			-> rrel_3: rrel_assign: rrel_scp_var: _param2;;
			-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: rrel_2;;

			=> nrel_then: .proc_define_task_type_operator2;;
			=> nrel_else: .proc_define_task_type_operator_return;;
		*);;

		-> .proc_define_task_type_operator2
		(*
			<- searchElStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _params;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
			-> rrel_3: rrel_assign: rrel_scp_var: _param3;;
			-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: rrel_3;;

			=> nrel_then: .proc_define_task_type_operator4;;
			=> nrel_else: .proc_define_task_type_operator3;;
		*);;

		-> .proc_define_task_type_operator3
		(*
			<- varAssign;;
			-> rrel_1: rrel_assign: rrel_scp_var: _question_name;;
			-> rrel_2: rrel_fixed: rrel_scp_const: question_find_sc_element_kb_element_relation;;

			=> nrel_goto: .proc_define_task_type_operator_return;;
		*);;

		-> .proc_define_task_type_operator4
		(*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_const: concept_graph;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _param3;;

			=> nrel_then: .proc_define_task_type_operator5;;
			=> nrel_else: .proc_define_task_type_operator_return;;
		*);;

		-> .proc_define_task_type_operator5
		(*
			<- varAssign;;
			-> rrel_1: rrel_assign: rrel_scp_var: _question_name;;
			-> rrel_2: rrel_fixed: rrel_scp_const: question_do_binary_operation;;

			=> nrel_goto: .proc_define_task_type_operator_return;;
		*);;

		-> .proc_define_task_type_operator_return(*<-return;;*);;
	*);;
*);;

