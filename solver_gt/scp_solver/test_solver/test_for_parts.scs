concept_graph -> the_best_graph;;
the_best_graph
-> rrel_vertex: vertex1;
-> rrel_vertex: vertex2;
-> rrel_vertex: vertex3;
-> rrel_vertex: vertex4;
-> rrel_vertex: vertex5;

-> rrel_oredge: (vertex1 => vertex2);
-> rrel_oredge: (vertex1 => vertex3);
-> rrel_oredge: (vertex1 => vertex4);
-> rrel_oredge: (vertex1 => vertex5);

-> rrel_oredge: (vertex2 => vertex1);
-> rrel_oredge: (vertex2 => vertex3);
-> rrel_oredge: (vertex2 => vertex4);
-> rrel_oredge: (vertex2 => vertex5);

-> rrel_oredge: (vertex3 => vertex2);
-> rrel_oredge: (vertex3 => vertex1);
-> rrel_oredge: (vertex3 => vertex4);
-> rrel_oredge: (vertex3 => vertex5);

-> rrel_oredge: (vertex4 => vertex2);
-> rrel_oredge: (vertex4 => vertex3);
-> rrel_oredge: (vertex4 => vertex1);
-> rrel_oredge: (vertex4 => vertex5);

-> rrel_oredge: (vertex5 => vertex2);
-> rrel_oredge: (vertex5 => vertex3);
-> rrel_oredge: (vertex5 => vertex4);
-> rrel_oredge: (vertex5 => vertex1);;

concept_graph -> the_best_graph1;;
the_best_graph1
-> rrel_vertex: vertex1;
-> rrel_vertex: vertex2;
-> rrel_vertex: vertex3;

-> rrel_oredge: (vertex1 => vertex2);
-> rrel_oredge: (vertex1 => vertex3);
-> rrel_oredge: (vertex2 => vertex1);
-> rrel_oredge: (vertex3 => vertex1);;

aaaa_test->the_best_graph1;concept_tree;;

sc_statement -> sc_statement_graph_tree;;
sc_statement_graph_tree
=> nrel_main_idtf:
	[Утв.(Граф-дерево)] (* <- lang_ru;; *);
=> nrel_main_idtf:
	[Statment.(Graph-tree)] (* <- lang_en;; *);

-> rrel_key_sc_element: concept_graph; concept_acyclic_graph; concept_connected_graph;
-> rrel_main_key_sc_element: concept_tree;

-> rrel_key_sc_element: 
        ... 
		(*
		<- sc_definition;;
		=> nrel_main_idtf: [Определение: Граф-дерево] (* <- lang_ru;; *);;
		=> nrel_main_idtf: [Definition: Graph-tree] (* <- lang_en;; *);;
		<= nrel_sc_text_translation: ...
			(*
			-> rrel_example: 
				[Граф-дерево - это ацикличный связанный граф](*<- lang_ru;;*);;
			-> rrel_example: 
				[Graph-tree is acyclic and connected graph](*<- lang_en;;*);;
		*);;
		<= nrel_bibliographical_source: emelichev_melnikov_lekcii_po_tg;;
*);

-> rrel_if: ..sc_statement_graph_tree_initiation_condition;

-> rrel_then: ..sc_statement_graph_tree_result;;
	
..sc_statement_graph_tree_initiation_condition = [*
	concept_graph _-> _graph;;
	concept_acyclic_graph _-> _graph;;
	concept_connected_graph _-> _graph;;
*];;

..sc_statement_graph_tree_result
= [*
	concept_tree _-> _graph;;
*];;
