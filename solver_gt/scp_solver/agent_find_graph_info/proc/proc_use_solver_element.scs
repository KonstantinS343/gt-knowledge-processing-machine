scp_program -> proc_use_solver_element
(*
	-> rrel_params: ...
	(*
		-> rrel_1: rrel_in: _current_graph;;
		-> rrel_2: rrel_in: _key_element;;
		-> rrel_3: rrel_in: _solver_element;;
		-> rrel_4: rrel_in: _solution_tree;;
	*);;

	-> rrel_operators: ... 
	(*
		//TODO: Implement procedure
		-> .proc_use_solver_element_operator&&
		(*
			<- genElStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _solution_tree;;
			-> rrel_2: rrel_assign: rrel_const: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _key_element;;
			-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: rrel_1;;

			=> nrel_goto: .proc_use_solver_element_operator&&;;
		*);;

		-> .proc_use_solver_element_operator&&
		(*
			<- genElStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _solution_tree;;
			-> rrel_2: rrel_assign: rrel_const: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _current_solver_element;;
			-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: rrel_2;;

			=> nrel_goto: .proc_use_solver_element_operator&&;;
		*);;

		-> .proc_use_solver_element_operator_return(*<-return;;*);;
	*);;
*);;

