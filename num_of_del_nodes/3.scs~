scp_program -> proc_find_num_graph_tree_nodes (*
	
	-> rrel_params: ... (*
		-> rrel_1: rrel_in: _graph;;
		-> rrel_2: rrel_in: _answer;;
	*);;

	-> rrel_operators: ... (*

	-> rrel_init: ..start (*
		<- searchElStr5;;
		-> rrel_1: rrel_fixed: rrel_scp_var: _graph;;
		-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
		-> rrel_3: rrel_assign: rrel_scp_var: _node;;
		-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc4;;
		-> rrel_5: rrel_fixed: rrel_scp_const: rrel_vertex;;
		
		=> nrel_then : ..pre_op0_1;;
		=> nrel_else : ..op_returno;;
		*);;
		
		
-> ..pre_pre_op (*
<- searchElStr5;;
-> rrel_1: rrel_fixed: rrel_scp_var: _graph;;
-> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _arc2;;
-> rrel_3: rrel_assign: rrel_node: rrel_link: rrel_const: rrel_scp_var: _answer;;
-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc4;;
-> rrel_5: rrel_fixed: rrel_scp_const: number_of_deleted_nodes;;

=> nrel_then : ..pre_op0_1;;
=> nrel_else : ..pre_op0;;
*);;


-> ..pre_op0 (*
<- genEl;;
-> rrel_1: rrel_assign: rrel_node: rrel_link: rrel_const: rrel_scp_var: _answer;;

=> nrel_goto : ..pre_op0_1;; *);;


-> ..pre_op0_1 (*
<- contAssign;;
-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
-> rrel_2: rrel_fixed: rrel_scp_const: [0];;

=> nrel_goto : ..pre_op1;; *);;

			
-> ..rocket_man (*
<-printNl;;
-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;

=>nrel_goto: ..pre_op1;; *);;


-> ..pre_op1 (*
<- genEl;;
-> rrel_1: rrel_assign: rrel_node:rrel_scp_var : _marked_nodes;;

=> nrel_goto : ..step1;; *);;


-> ..step1 (*
<- genElStr3;;
-> rrel_1 : rrel_fixed : rrel_scp_var : _marked_nodes;;
-> rrel_2 : rrel_assign : rrel_pos_const_perm : rrel_scp_var : _arc;;
-> rrel_3 : rrel_fixed : rrel_scp_var : _node;;

=> nrel_goto : ..ave_start_recurs;; *);;
//////////////////////////////////////////////////////////////////////////////////////////////////


-> ..ave_start_recurs (*
<- call;;
	-> rrel_1: rrel_fixed: rrel_scp_const: visiting_round;;
	-> rrel_2: rrel_fixed: rrel_scp_const: ... (*
		-> rrel_1: rrel_fixed: rrel_scp_var: _node;;
		-> rrel_2: rrel_fixed: rrel_scp_var: _node;;
		-> rrel_3: rrel_fixed: rrel_scp_var: _answer;;
		-> rrel_4: rrel_fixed: rrel_scp_var: _graph;;
		-> rrel_5: rrel_fixed: rrel_scp_var: _marked_nodes;;
	*);;
	-> rrel_3: rrel_assign: rrel_scp_var: _descr;;

	=> nrel_goto: ..hail_to_the_king;;
*);;
	
-> ..hail_to_the_king (*
	<- waitReturn;;
	-> rrel_1: rrel_fixed: rrel_scp_var: _descr;;
	
	=> nrel_goto: ..finn;; *);;


//////////////////////////////////////////////////////////////////////////////////////////////////

-> ..finn (*
<- contDiv;;
-> rrel_1 : rrel_fixed : rrel_scp_var: _answer;;
-> rrel_2 : rrel_fixed : rrel_scp_var: _answer;;
-> rrel_3 : rrel_fixed : rrel_scp_const: [2];;

=> nrel_goto: ..del_trash;; *);;


-> ..cout (*
<-print;;
-> rrel_1: rrel_fixed: rrel_scp_const: [Number of nodes you shoud delete to transform your graph in tree : ];;

=> nrel_goto: ..del_trash;; *);;


-> ..del_trash (*
<- eraseSetStr3;;
-> rrel_1 : rrel_fixed : rrel_scp_var : _marked_nodes;;
-> rrel_2 : rrel_assign : rrel_erase: rrel_scp_var : _arc;;
-> rrel_3 : rrel_assign : rrel_scp_var: _elem ;;

=> nrel_goto : ..del_trash_2;; *);;


-> ..del_trash_2 (*
<- eraseEl;;
-> rrel_1 : rrel_fixed :rrel_erase: rrel_scp_var : _marked_nodes;;

=> nrel_goto : ..identify;; *);;


-> ..find_ind (*
<- searchElStr5
-> rrel_1: rrel_fixed: rrel_scp_var: _graph;;
-> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _arc2;;
-> rrel_3: rrel_fixed: rrel_scp_var: _answer;;
-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc4;;
-> rrel_5: rrel_fixed: rrel_scp_const: number_of_deleted_nodes;;
		
=> nrel_then : ..op_returno;;
=> nrel_else: ..identify;; *);;


-> ..identify (*
<- genElStr5
-> rrel_1: rrel_fixed: rrel_scp_var: _graph;;
-> rrel_2: rrel_assign: rrel_common: rrel_scp_var: _arc2;;
-> rrel_3: rrel_fixed: rrel_scp_var: _answer;;
-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc4;;
-> rrel_5: rrel_fixed: rrel_scp_const: number_of_deleted_nodes;;
		
=> nrel_goto : ..op_returno;; *);;

-> ..op_returno (*
<- return;; *);;

*);;
*);;
