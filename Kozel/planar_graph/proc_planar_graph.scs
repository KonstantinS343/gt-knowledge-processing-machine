scp_program -> proc_planar_graph
(*
	-> rrel_params: ...
	(*
		-> rrel_1: rrel_in: _curr_graph;;
		-> rrel_2: rrel_in: _answer;;
	*);;

	-> rrel_operators: ... 
	(*
		-> rrel_init: .proc_planar_graph_operator0
		(*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_const: concept_planar_graph;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _curr_graph;;
			
			=> nrel_then: 
			.proc_planar_graph_operator15_1;;
			=> nrel_else: .proc_planar_graph_operator0_0_1;;
		*);;
                ->.proc_planar_graph_operator0_0_1
		(*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_const: concept_planar_graph;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_neg: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _curr_graph;;
			
			=> nrel_then: 
			.proc_planar_graph_operator15_1;;
			=> nrel_else: .proc_planar_graph_operator0_1;;
		*);;

		-> .proc_planar_graph_operator_find_K5
		(*
                        <- sys_search;;
			-> rrel_1: rrel_fixed: pattern_graph;;
			-> rrel_2: rrel_fixed: rrel_scp_const: ...;;
			-> rrel_3: rrel_fixed: rrel_scp_const: ...;;
			-> rrel_4: rrel_fixed: rrel_scp_var: _answer;;

			=>nrel_then:
			.proc_planar_graph_operator13;;
			=> nrel_else: .proc_planar_graph_operator15_1;;
		*);;
		
		-> .proc_planar_graph_operator0_1
		(*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_const: concept_planar_graph;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_neg: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _curr_graph;;
			
			=> nrel_then: .proc_planar_graph_operator15_1;;
			=> nrel_else: .proc_planar_graph_operator1;;
		*);;

		-> .proc_planar_graph_operator1
		(*
			<- genEl;;
			-> rrel_1: rrel_assign: rrel_node: rrel_link: rrel_const: rrel_scp_var: _vertex_amount;;

			=> nrel_goto: .proc_planar_graph_operator2;;
		*);;

                -> .proc_planar_graph_operator2
		(*
			<- contAssign;;
		  	-> rrel_1: rrel_fixed: rrel_scp_var: rrel_link : _vertex_amount;;
		  	-> rrel_2: rrel_fixed: rrel_scp_const: [0];;

			=> nrel_goto: .proc_planar_graph_operator3;;
		*);;

		-> .proc_planar_graph_operator3
		(*
			<- searchSetStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _curr_graph;;
                        -> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc_of_vertexs1;;
                        -> rrel_3: rrel_assign: rrel_scp_var: _vert;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc_of_vertexs2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: rrel_vertex;;

			-> rrel_set_3: rrel_assign: rrel_scp_var: _vertexs;;
			
			=> nrel_then: .proc_planar_graph_operator4;;
                	=> nrel_else: .proc_planar_graph_return;;
		*);;

		-> .proc_planar_graph_operator4
		(*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _vertexs;;
                        -> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc_erase;;
                        -> rrel_3: rrel_assign: rrel_scp_var: _curr_vert;;
			
			=>nrel_then: .proc_planar_graph_operator5;;
			=>nrel_else: .proc_planar_graph_operator7;; 	
		*);;

		-> .proc_planar_graph_operator5
		(*
			<- eraseEl;;
			-> rrel_1: rrel_fixed: rrel_scp_var: rrel_erase:  _arc_erase;;
                        		
			=>nrel_goto: .proc_planar_graph_operator6;;
			
		*);;
                
                -> .proc_planar_graph_operator6
                (*
                        <-contAdd;;
                        ->rrel_1 : rrel_fixed : rrel_scp_var : rrel_link:  _vertex_amount;;
                        ->rrel_2 : rrel_fixed : rrel_scp_var : rrel_link : _vertex_amount;;
                        ->rrel_3 : rrel_fixed : rrel_scp_const : [1];;
                        
                        =>nrel_goto: .proc_planar_graph_operator4;;
                *);;
                
                -> .proc_planar_graph_operator7
                (*
                        <-ifGr;;
                        ->rrel_1 : rrel_fixed : rrel_scp_var : _vertex_amount;;
                        ->rrel_2 : rrel_fixed : rrel_scp_const : [4];;
                        
                        =>nrel_then: .proc_planar_graph_operator7_1;;
                        =>nrel_else: .proc_planar_graph_operator14;;
                *);;
                
                -> .proc_planar_graph_operator7_1
                (*
                        <-contMult;;
                        ->rrel_1 : rrel_fixed : rrel_scp_var : rrel_link : _vertex_amount;;
                        ->rrel_2 : rrel_fixed : rrel_scp_var : rrel_link : _vertex_amount;;
                        ->rrel_3 : rrel_fixed : rrel_scp_const : [3];;
                        
                        =>nrel_goto: .proc_planar_graph_operator8;;
                *);;
                
                
                -> .proc_planar_graph_operator8
                (*
                        <-contSub;;
                        ->rrel_1 : rrel_fixed : rrel_scp_var : rrel_link : _vertex_amount;;
                        ->rrel_2 : rrel_fixed : rrel_scp_var : rrel_link : _vertex_amount;;
                        ->rrel_3 : rrel_fixed : rrel_scp_const : [6];;
                        
                        =>nrel_goto: .proc_planar_graph_operator9;;
                *);;
                
                -> .proc_planar_graph_operator9
		(*
			<- searchSetStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _curr_graph;;
                        -> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc_of_vertexs1;;
                        -> rrel_3: rrel_assign: rrel_scp_var: _vert;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc_of_vertexs2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: rrel_oredge;;

			-> rrel_set_3: rrel_assign: rrel_scp_var: _edges;;
			
			=> nrel_then: .proc_planar_graph_operator10;;
                	=> nrel_else: .proc_planar_graph_operator14;;
		*);;

		-> .proc_planar_graph_operator10
		(*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _edges;;
                        -> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc_erase;;
                        -> rrel_3: rrel_assign: rrel_scp_var: _curr_edge;;
			
			=>nrel_then: .proc_planar_graph_operator11;;
			=>nrel_else: .proc_planar_graph_operator14;; 
		*);;
                
                -> .proc_planar_graph_operator11
		(*
			<- ifGr;;
		  	-> rrel_1: rrel_fixed: rrel_scp_var: _vertex_amount;;
		  	-> rrel_2: rrel_fixed: rrel_scp_const: [0];;

			=>nrel_then: .proc_planar_graph_operator12_1;;
			=>nrel_else: .proc_planar_graph_operator13;; 
		*);;
		
                /* находим её начало и конец*/ 
		-> .proc_planar_graph_operator12_1
		(*
			<- searchElStr3;;
			-> rrel_1: rrel_assign: rrel_scp_var: _v1;;
                        -> rrel_2: rrel_fixed: rrel_scp_var: _curr_edge;;
                        -> rrel_3: rrel_assign: rrel_scp_var: _v2;;
                        
			=>nrel_then: .proc_planar_graph_operator12_2;;
			=>nrel_else: .proc_planar_graph_return;; 
		*);;
                /* ищем обратную дугу в мн-ве _edges */
                -> .proc_planar_graph_operator12_2
		(*
			<- searchElStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _v1;;
                        -> rrel_2: rrel_assign: rrel_scp_var: _arc_erase_1;;
                        -> rrel_3: rrel_fixed: rrel_scp_var: _v2;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _this_arc;;
			-> rrel_5: rrel_fixed : rrel_scp_var: _edges;;
			=>nrel_then: .proc_planar_graph_operator12_4;;
			=>nrel_else: .proc_planar_graph_operator12_3;; 
		*);;
		-> .proc_planar_graph_operator12_3
		(*
			<- searchElStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _v2;;
                        -> rrel_2: rrel_assign: rrel_scp_var: _arc_erase_1;;
                        -> rrel_3: rrel_fixed: rrel_scp_var: _v1;;
			-> rrel_4: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _this_arc;;
			-> rrel_5: rrel_fixed : rrel_scp_var: _edges;;
			=>nrel_then: .proc_planar_graph_operator12_4;;
			=>nrel_else: .proc_planar_graph_operator12_1_1;; 
		*);;
		
		-> .proc_planar_graph_operator12_4
		(*
			<- eraseEl;;
                        -> rrel_1: rrel_fixed: rrel_scp_var: rrel_erase: _this_arc;;
                         
			=>nrel_goto: .proc_planar_graph_operator12_2;;
			
		*);;
                
		-> .proc_planar_graph_operator12_1_0
		(*
			<- eraseEl;;
                        -> rrel_1: rrel_fixed: rrel_scp_var: rrel_erase:  _arc_erase;;
                        
			=>nrel_goto: .proc_planar_graph_operator12_1;;
			
		*);;
                
                -> .proc_planar_graph_operator12_1_1
                (*
                        <-contSub;;
                        ->rrel_1 : rrel_fixed : rrel_scp_var : rrel_link : _vertex_amount;;
                        ->rrel_2 : rrel_fixed : rrel_scp_var : rrel_link : _vertex_amount;;
                        ->rrel_3 : rrel_fixed : rrel_scp_const : [1];;
                        
                        =>nrel_goto: .proc_planar_graph_operator10;;
                *);;
                
                
                
                
                
                
                -> .proc_planar_graph_operator13
		(*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_const: concept_planar_graph;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_neg: rrel_const: rrel_perm: rrel_access: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _curr_graph;;
			
			=> nrel_goto: .proc_planar_graph_operator15_1;;
		*);;

		
		-> .proc_planar_graph_operator14
		(*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_const: concept_planar_graph;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: rrel_const: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _curr_graph;;
			
			=> nrel_goto: .proc_planar_graph_operator15_1;;
		*);;
	
		
		-> .proc_planar_graph_operator15_1
		(*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_const: concept_planar_graph;;
			
			=> nrel_goto: .proc_planar_graph_operator15_2;;
		*);;

		-> .proc_planar_graph_operator15_2
		(*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _arc;;
			
			=> nrel_goto: .proc_planar_graph_operator15_3;;
		*);;

		-> .proc_planar_graph_operator15_3
		(*
			<- genElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_2: rrel_assign: rrel_scp_var: rrel_pos_const_perm: _arc1;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _curr_graph;;
			
			=> nrel_goto: .proc_planar_graph_return;;
		*);;

		-> .proc_planar_graph_operator21_3
		(*
			<- call;;
			-> rrel_1: rrel_fixed: rrel_scp_const: proc_add_graph_in_ans;;
			-> rrel_2: rrel_fixed: rrel_scp_const: ... 
			(*
				-> rrel_1: rrel_fixed: rrel_scp_var: _curr_graph;;
				-> rrel_2: rrel_fixed: rrel_scp_var: _answer;;
			*);;

			-> rrel_3: rrel_assign: rrel_scp_var: _descr;;

			=> nrel_goto: .proc_planar_graph_operator22;;
		*);;
		
		-> .proc_planar_graph_operator22
		(*
			<- waitReturn;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _descr;;

			=> nrel_goto: .proc_planar_graph_return;;
		*);;
		
		-> .proc_planar_graph_return(*<-return;;*);;
                
                
		
	*);;
*);;

