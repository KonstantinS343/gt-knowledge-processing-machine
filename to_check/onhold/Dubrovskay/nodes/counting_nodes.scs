scp_program -> counting_nodes (*
	
	-> rrel_params: ... (*
		-> rrel_1: rrel_in: rrel_scp_var: _count;;
		-> rrel_2: rrel_in: _graph;;
	*);;

	-> rrel_operators: ... (*

	-> rrel_init: ..start (*
<- searchSetStr5;;
-> rrel_1: rrel_fixed: rrel_scp_var: _graph;;
-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
-> rrel_3: rrel_assign: rrel_scp_var: _el3;;
-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc4;;
-> rrel_5: rrel_fixed: rrel_scp_const : rrel_vertex;;
-> rrel_set_3 : rrel_assign : rrel_scp_var : _set;;

=> nrel_goto : ..counting_nodes1;; *);;


-> ..counting_nodes1 (*
<- searchElStr3;;
-> rrel_1 : rrel_fixed : rrel_scp_var : _set;;
-> rrel_2 : rrel_assign : rrel_pos_const_perm : rrel_scp_var : _arc;;
-> rrel_3 : rrel_assign : rrel_scp_var : _new;;

=> nrel_then : ..iterator;; 
=> nrel_else : ..finish ;;*);;


-> ..counting_nodes2 (*
<- eraseEl;;
-> rrel_1 : rrel_fixed : rrel_pos_const_perm : rrel_erase:rrel_scp_var : _arc;;

=> nrel_goto : ..counting_nodes1;; *);;


-> ..iterator (*
<- contAdd;;
-> rrel_1 : rrel_fixed : rrel_scp_var: _count;;
-> rrel_2 : rrel_fixed : rrel_scp_var: _count;;
-> rrel_3 : rrel_fixed : rrel_scp_const: [1];;

=> nrel_goto : ..counting_nodes2;; *);;



-> ..finish (*
<- eraseEl;;
-> rrel_1 : rrel_fixed : rrel_erase: rrel_scp_var : _set;;

=> nrel_goto : ..oper_return;; *);;



-> ..oper_return (*
<-return;; *);;


*);;
*);;
