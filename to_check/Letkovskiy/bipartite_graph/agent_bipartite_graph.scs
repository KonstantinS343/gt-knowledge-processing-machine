agent_proc_bipartite_graph
=> nrel_main_idtf:
	[агентная scp-программа проверки графа на двудольность] (* <- lang_ru;; *);
	[agent scp-program of finding out if graph is bipartite] (* <- lang_en;; *);
	<- agent_scp_program;;

scp_program -> agent_proc_bipartite_graph (*
	-> rrel_params: .agent_proc_bipartite_graph_params (*
		-> rrel_1: rrel_in: _event;;
		-> rrel_2: rrel_in: _input_arc;;
	*);;

	-> rrel_operators: .agent_proc_bipartite_graph_operator_set (*

		-> rrel_init: .agent_proc_bipartite_graph_operator1 (*
		  <- searchElStr3;;
		  -> rrel_1: rrel_assign: rrel_scp_var: _temp;;
		  -> rrel_2: rrel_fixed: rrel_scp_var: _input_arc;;
		  -> rrel_3: rrel_assign: rrel_scp_var: _quest;;

		  => nrel_goto: .agent_proc_bipartite_graph_operator2;;
		*);;

		-> .agent_proc_bipartite_graph_operator2 (*
		  <- searchElStr3;;
		  -> rrel_1: rrel_fixed: rrel_scp_const: question_is_graph_bipartite;;
		  -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
		  -> rrel_3: rrel_fixed: rrel_scp_var: _quest;;

		  => nrel_then: .agent_proc_bipartite_graph_operator3;;
		  => nrel_else: .agent_proc_bipartite_graph_operator_return;;
		*);;

		-> .agent_proc_bipartite_graph_operator3 (*
		  <- searchElStr3;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
		  -> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
		  -> rrel_3: rrel_assign: rrel_scp_var: _outline;;

		  => nrel_then: .agent_proc_bipartite_graph_operator3_1;;
		  => nrel_else: .agent_proc_bipartite_graph_operator_return;;
		*);;

		-> .agent_proc_bipartite_graph_operator3_1
		(*
			<- call;;
		        -> rrel_1: rrel_fixed: rrel_scp_const: proc_add_vertex_edge_attr;;
		        -> rrel_2: rrel_fixed: rrel_scp_const: ... 
				(*
					-> rrel_1: rrel_fixed: rrel_scp_var: _outline;;
				*);;
		        -> rrel_3: rrel_assign: rrel_scp_var: _descr;;

			=> nrel_goto: .agent_proc_bipartite_graph_operator3_2;;
		*);;

		-> .agent_proc_bipartite_graph_operator3_2
		(*
			<- waitReturn;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _descr;;

			=> nrel_goto: .agent_proc_bipartite_graph_operator4;;
		*);;

		-> .agent_proc_bipartite_graph_operator4 (*
		  <- genEl;;
		  -> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _answer;;

		  => nrel_goto: .agent_proc_bipartite_graph_operator5;;
		*);;

		-> .agent_proc_bipartite_graph_operator5 (*
		  <- call;;
		  -> rrel_1: rrel_fixed: rrel_scp_const: proc_check_bipart_graph;;
		  -> rrel_2: rrel_fixed: rrel_scp_const: .agent_proc_bipartite_graph_operator5_params (*
				-> rrel_1: rrel_fixed: rrel_scp_var: _outline;;
				-> rrel_2: rrel_fixed: rrel_scp_var: _answer;;
			*);;
		  -> rrel_3: rrel_assign: rrel_scp_var: _descr;;

		  => nrel_goto: .agent_proc_bipartite_graph_operator6;;
		*);;

		-> .agent_proc_bipartite_graph_operator6 (*
		  <- waitReturn;;
		  -> rrel_1: rrel_fixed: rrel_scp_var: _descr;;

		  => nrel_goto: .agent_proc_bipartite_graph_operator7_1;;
		*);;
		
		-> .agent_proc_bipartite_graph_operator7_1
		(*
			<- call;;
		        -> rrel_1: rrel_fixed: rrel_scp_const: proc_remove_vertex_edge_attr;;
		        -> rrel_2: rrel_fixed: rrel_scp_const: ... 
				(*
					-> rrel_1: rrel_fixed: rrel_scp_var: _outline;;
				*);;
		        -> rrel_3: rrel_assign: rrel_scp_var: _descr2;;

			=> nrel_goto: .agent_proc_bipartite_graph_operator7_2;;
		*);;

		-> .agent_proc_bipartite_graph_operator7_2
		(*
			<- waitReturn;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _descr2;;

			=> nrel_goto: .agent_proc_bipartite_graph_operator7_3;;
		*);;			
		
		-> .agent_proc_bipartite_graph_operator7_3
		(*
			<- call;;
		        -> rrel_1: rrel_fixed: rrel_scp_const: proc_generate_full_answer;;
		        -> rrel_2: rrel_fixed: rrel_scp_const: ... 
				(*
					-> rrel_1: rrel_fixed: rrel_scp_var: _outline;;
					-> rrel_2: rrel_fixed: rrel_scp_var: _answer;;
				*);;
		        -> rrel_3: rrel_assign: rrel_scp_var: _descr2;;

			=> nrel_goto: .agent_proc_bipartite_graph_operator7_4;;
		*);;

		-> .agent_proc_bipartite_graph_operator7_4
		(*
			<- waitReturn;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _descr2;;

			=> nrel_goto: .agent_proc_bipartite_graph_operator7_5;;
		*);;

		-> .agent_proc_bipartite_graph_operator7_5
		(*
			<- genElStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
			-> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_answer;;

			=>nrel_goto: .agent_proc_bipartite_graph_operator_return;;
		*);; 

		-> .agent_proc_bipartite_graph_operator_return (*
		  <- return;;
		*);;
	*);;
*);;
