agent_of_checking_planar_graph
=> nrel_main_idtf:
	[агентная scp-программа проверки графа на планарность] (* <- lang_ru;; *);
	[agent scp-program of check graph is planar] (* <- lang_en;; *);
	<- agent_scp_program;;

scp_program -> agent_of_checking_planar_graph (*
	-> rrel_params: .agent_of_checking_planar_graph_params (*
		-> rrel_1: rrel_in: _event;;
		-> rrel_2: rrel_in: _input_arc;;
	*);;

	-> rrel_operators: .agent_of_checking_planar_graph_operator_set (*
		-> rrel_init: .agent_of_checking_planar_graph_operator1 
		(*
			<- searchElStr3;;
			-> rrel_1: rrel_assign: rrel_scp_var: _temp;;
			-> rrel_2: rrel_fixed: rrel_scp_var: _input_arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _quest;;
	
			=> nrel_goto: .agent_of_checking_planar_graph_operator2;;
		*);;

		-> .agent_of_checking_planar_graph_operator2 
		(*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_const: question_of_checking_planar_graph;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _quest;;

			=> nrel_then: .agent_of_checking_planar_graph_operator2_1;;
			=> nrel_else: .agent_of_checking_planar_graph_operator_return;;
		*);;

		-> .agent_of_checking_planar_graph_operator2_1 
		(*
			<- searchElStr3;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
			-> rrel_2: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc;;
			-> rrel_3: rrel_assign: rrel_scp_var: _outline;;

			=> nrel_then: .agent_of_checking_planar_graph_operator3;;
			=> nrel_else: .agent_of_checking_planar_graph_operator_return;;
		*);;
                
		-> .agent_of_checking_planar_graph_operator3
		(*
			<- call;;
		        -> rrel_1: rrel_fixed: rrel_scp_const: proc_add_vertex_edge_attr;;
		        -> rrel_2: rrel_fixed: rrel_scp_const: ... 
				(*
					-> rrel_1: rrel_fixed: rrel_scp_var: _outline;;
				*);;
		        -> rrel_3: rrel_assign: rrel_scp_var: _descr;;

			=> nrel_goto: .agent_of_checking_planar_graph_operator4;;
		*);;

        
		-> .agent_of_checking_planar_graph_operator4 
		(*
			<- waitReturn;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _descr;;

			=> nrel_goto: .agent_of_checking_planar_graph_operator5;;
		*);;		
		
		-> .agent_of_checking_planar_graph_operator5
		(*
			<- genEl;;
			-> rrel_1: rrel_assign: rrel_const: rrel_node: rrel_scp_var: _answer;;

			=> nrel_goto: .agent_of_checking_planar_graph_operator6;;
		*);;
		
		-> .agent_of_checking_planar_graph_operator6
		(*
			<- call;;
		        -> rrel_1: rrel_fixed: rrel_scp_const: proc_planar_graph;;
		        -> rrel_2: rrel_fixed: rrel_scp_const: ... 
				(*
					-> rrel_1: rrel_fixed: rrel_scp_var: _outline;;	//copy 
					/*-> rrel_1: rrel_fixed: rrel_scp_var: _result;;*/
					
				*);;
		        -> rrel_3: rrel_assign: rrel_scp_var: _descr;;

			=> nrel_goto: .agent_of_checking_planar_graph_operator7;;
		*);;

		-> .agent_of_checking_planar_graph_operator7
		(*
			<- waitReturn;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _descr;;

			=> nrel_goto: .agent_of_checking_planar_graph_operator8;;
		*);;	
		
		-> .agent_of_checking_planar_graph_operator8
		(*
			<- call;;
		        -> rrel_1: rrel_fixed: rrel_scp_const: proc_remove_vertex_edge_attr;;
		        -> rrel_2: rrel_fixed: rrel_scp_const: ... 
				(*
					-> rrel_1: rrel_fixed: rrel_scp_var: _outline;;
				*);;
		        -> rrel_3: rrel_assign: rrel_scp_var: _descr2;;

			=> nrel_goto: .agent_of_checking_planar_graph_operator9;;
		*);;

		-> .agent_of_checking_planar_graph_operator9
		(*
			<- waitReturn;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _descr2;;

			=> nrel_goto: .agent_of_checking_planar_graph_operator10;;
		*);;			

		-> .agent_of_checking_planar_graph_operator10
		(*
			<- call;;
		        -> rrel_1: rrel_fixed: rrel_scp_const: proc_add_f_a_f_to_set;;
		        -> rrel_2: rrel_fixed: rrel_scp_const: ... 
				(*
					-> rrel_1: rrel_fixed: rrel_scp_const: concept_planar_graph;;
					-> rrel_2: rrel_fixed: rrel_scp_var: _outline;;
					-> rrel_3: rrel_fixed: rrel_scp_var: _answer;;
				*);;
		        -> rrel_3: rrel_assign: rrel_scp_var: _descr2;;

			=> nrel_goto: .agent_of_checking_planar_graph_operator11;;
		*);;

		-> .agent_of_checking_planar_graph_operator11
		(*
			<- waitReturn;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _descr2;;

			=> nrel_goto: .agent_of_checking_planar_graph_operator12;;
		*);;
		
		-> .agent_of_checking_planar_graph_operator12
		(*
			<- call;;
		        -> rrel_1: rrel_fixed: rrel_scp_const: proc_generate_full_answer;;
		        -> rrel_2: rrel_fixed: rrel_scp_const: ... 
				(*
					/*-> rrel_1: rrel_fixed: rrel_scp_var: _outline;;*/
					-> rrel_1: rrel_fixed: rrel_scp_var: _outline;;
					-> rrel_2: rrel_fixed: rrel_scp_var: _answer;;
				*);;
		        -> rrel_3: rrel_assign: rrel_scp_var: _descr2;;

			=> nrel_goto: .agent_of_checking_planar_graph_operator13;;
		*);;

		-> .agent_of_checking_planar_graph_operator13
		(*
			<- waitReturn;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _descr2;;

			=> nrel_goto: .agent_of_checking_planar_graph_operator_last;;
		*);;
		-> .agent_of_checking_planar_graph_operator_last
		(*
			<- genElStr5;;
			-> rrel_1: rrel_fixed: rrel_scp_var: _quest;;
			-> rrel_2: rrel_assign: rrel_const: rrel_common: rrel_scp_var: _arc;;
			-> rrel_3: rrel_fixed: rrel_scp_var: _answer;;
			-> rrel_4: rrel_assign: rrel_pos_const_perm: rrel_scp_var: _arc2;;
			-> rrel_5: rrel_fixed: rrel_scp_const: nrel_answer;;

			=>nrel_goto: .agent_of_checking_planar_graph_operator_return;;
		*);; 

		-> .agent_of_checking_planar_graph_operator_return (*
		  <- return;;
		*);;
        *);;
*);;
