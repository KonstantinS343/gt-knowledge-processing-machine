proc_directivity_of_graph
=> nrel_main_idtf:
	[Программа проверки графа на ориентированность] (* <- lang_ru;; *);

=> nrel_initiation_condition_and_result: (..scp_program_proc_directivity_of_graph_initiation_condition
					  => ..scp_program_proc_directivity_of_graph_result1);
=> nrel_initiation_condition_and_result: (..scp_program_proc_directivity_of_graph_initiation_condition
					  => ..scp_program_proc_directivity_of_graph_result2);

<= nrel_scp_program_key_sc_elements: 
	{
		concept_graph;
		concept_undirected_graph;
		concept_directed_graph;
		rrel_vertex;
		rrel_oredge
	};

<- key_sc_element:
	..scp_program_proc_directivity_of_graph_behavior
	(*
		<- sc_description_of_scp_program_behavior;;
		<= nrel_sc_text_translation:
		...
		(*
			-> rrel_example:
				[Это программа создает дугу приндлежности к графу либо из понятия "ориентированный граф", если граф ориентированный, либо из понятия "неориентированный граф", если граф неориентированный];;
		*);;
	*);;

..scp_program_proc_directivity_of_graph_initiation_condition
= [*
	concept_graph _-> _curr_graph;;
*];;


..scp_program_proc_directivity_of_graph_result1
= [*
	concept_graph _-> _curr_graph;;
	concept_directed_graph _-> _curr_graph;;
*];;

..scp_program_proc_directivity_of_graph_result2
= [*
	concept_graph _-> _curr_graph;;
	concept_undirected_graph _-> _curr_graph;;
*];;
