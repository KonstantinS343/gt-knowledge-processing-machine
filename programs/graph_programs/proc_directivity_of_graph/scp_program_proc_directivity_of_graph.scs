proc_directivity_of_graph
=> nrel_main_idtf:
	[Программа проверки графа на ориентированность] (* <- lang_ru;; *);

-> rrel_key_sc_element: concept_graph;
-> rrel_main_key_sc_element: concept_undirected_graph; concept_directed_graph;

<- key_sc_element:
	..scp_program_proc_directivity_of_graph_behavior
	(*
		<- sc_description_of_scp_program_behavior;;
		<= nrel_sc_text_translation:
		...
		(*
			-> rrel_example:
				[Это программа создает дугу приндлежности к графу либо из понятия "ориентированный граф", если граф ориентированный, либо из понятия "неориентированный граф", если граф неориентированный];;
		*);;
	*);

-> rrel_if: ..scp_program_proc_directivity_of_graph_initiation_condition;
-> rrel_then: ..scp_program_proc_directivity_of_graph_result;;

..scp_program_proc_directivity_of_graph_initiation_condition
= [*
	concept_graph _-> _curr_graph;;
*];;

..scp_program_proc_directivity_of_graph_result
	<- nrel_disjunction;
	-> ..scp_program_proc_directivity_of_graph_result1;
	-> ..scp_program_proc_directivity_of_graph_result2;;

..scp_program_proc_directivity_of_graph_result1
= [*
	concept_directed_graph _-> _curr_graph;;
*];;

..scp_program_proc_directivity_of_graph_result2
= [*
	concept_undirected_graph _-> _curr_graph;;
*];;
