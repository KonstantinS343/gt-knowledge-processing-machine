proc_find_cyclic_graph
=> nrel_main_idtf:
	[Программа проверки графа на цикличность] (* <- lang_ru;; *);
	
=> nrel_initiation_condition_and_result: (..scp_program_proc_find_cyclic_graph_initiation_condition
					  => ..scp_program_proc_find_cyclic_graph_result);

-> rrel_key_sc_element: concept_graph;concept_cyclic_graph; concept_acyclic_graph;
-> rrel_solver_key_sc_element: concept_cyclic_graph; concept_acyclic_graph;

<- rrel_key_sc_element:
	..scp_program_proc_find_cyclic_graph_behavior
	(*
		<- sc_description_of_scp_program_behavior;;
		<= nrel_sc_text_translation:
		...
		(*
			-> rrel_example:
				[Это программа создает из понятия "цикличный граф" к графу либо дугу приндлежности, если граф цикличный, либо отрицательную дугу, если граф нецикличный];;
		*);;
	*);;
	
..scp_program_proc_find_cyclic_graph_initiation_condition = [*
	concept_graph _-> _graph;;
*];;

..scp_program_proc_find_cyclic_graph_result
	<- nrel_disjunction;
	-> ..scp_program_proc_find_cyclic_graph_result1;
	-> ..scp_program_proc_find_cyclic_graph_result2;;

..scp_program_proc_find_cyclic_graph_result1
= [*
	concept_cyclic_graph _-> _graph;;
*];;

..scp_program_proc_find_cyclic_graph_result2
= [*
	concept_acyclic_graph _-> _graph;;
*];;
