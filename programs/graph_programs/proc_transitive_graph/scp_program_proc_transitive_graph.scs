proc_transitive_graph
=> nrel_main_idtf:
	[Программа проверки графа на транзитивность] (* <- lang_ru;; *);

=> nrel_initiation_condition_and_result: (..scp_program_proc_transitive_graph_initiation_condition
					  => ..scp_program_proc_transitive_graph_result);

<= nrel_scp_program_key_sc_elements: 
	{
		concept_graph;
		concept_transitive_graph;
		rrel_vertex;
		rrel_oredge
	};

<- key_sc_element:
	..scp_program_proc_transitive_graph_behavior
	(*
		<- sc_description_of_scp_program_behavior;;
		<= nrel_sc_text_translation:
		...
		(*
			-> rrel_example:
				[Это программа создает из понятия "транзитивный граф" к графу либо дугу приндлежности, если граф транзитивный, либо отрицательную дугу, если граф нетранзитивный];;
		*);;
	*);;

..scp_program_proc_transitive_graph_initiation_condition
= [*
	concept_graph _-> _curr_graph;;
*];;

..scp_program_proc_transitive_graph_result
	<- nrel_conjunction;
	-> ..scp_program_proc_transitive_graph_result1;
	-> ..scp_program_proc_transitive_graph_result2;;

..scp_program_proc_transitive_graph_result1
= [*
	concept_transitive_graph _-> _curr_graph;;
*];;

..scp_program_proc_transitive_graph_result2
= [*
	concept_transitive_graph _-|> _curr_graph;;
*];;
