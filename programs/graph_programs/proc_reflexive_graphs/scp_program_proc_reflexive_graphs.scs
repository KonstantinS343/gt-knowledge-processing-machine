proc_reflexive_graphs
=> nrel_main_idtf:
	[Программа проверки графа на рефлексивность] (* <- lang_ru;; *);

-> rrel_key_sc_element: concept_graph;
-> rrel_main_key_sc_element: concept_reflexive_graph;

<- key_sc_element:
	..scp_program_proc_reflexive_graphs_behavior
	(*
		<- sc_description_of_scp_program_behavior;;
		<= nrel_sc_text_translation:
		...
		(*
			-> rrel_example:
				[Это программа создает из понятия "рефлексивный граф" к графу либо дугу приндлежности, если граф рефлексивный, либо отрицательную дугу, если граф нерефлексивный];;
		*);;
	*);

-> rrel_if: ..scp_program_proc_reflexive_graphs_initiation_condition;
-> rrel_then: ..scp_program_proc_reflexive_graphs_result;;

..scp_program_proc_reflexive_graphs_initiation_condition
= [*
	concept_graph _-> _curr_graph;;
*];;

..scp_program_proc_reflexive_graphs_result
	<- nrel_disjunction;
	-> ..scp_program_proc_reflexive_graphs_result1;
	-> ..scp_program_proc_reflexive_graphs_result2;;

..scp_program_proc_reflexive_graphs_result1
= [*
	concept_reflexive_graph _-> _curr_graph;;
*];;

..scp_program_proc_reflexive_graphs_result2
= [*
	concept_reflexive_graph _-|> _curr_graph;;
*];;
